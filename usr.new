#!/bin/bash

if [ -z "$1" ]; then
    echo "No username given"
    exit
fi

SCRIPTPATH="$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )" #"
. $SCRIPTPATH/_config
. $SCRIPTPATH/_lib



#прописать ползователю $1 ip адресс $2
function attachUserIp() {
	invUser=`curl -k -s $inventoryApiUrl/users/view?login=$1`
	userid=`echo $invUser|jq -r .id`
	ips=`echo $invUser|jq -r .ips`
	user=`echo $invUser|jq -r .Login`

	if [ "$1" != "$user" ]; then
		echo "Пользователь $1 не найден"
		return 0
	fi

	#echo $invUser

	if echo "$ips" | grep -q "$2"; then
		echo "IP адрес $2 уже закреплен за $1"
		return 0
	else

		if [ "$ips" == "null" ] ; then
			ips=$2
		else
			ips="$ips
$2"
		fi
		curl -s -d "ips=$ips" -X PUT $inventoryApiUrl/users/$userid >>/dev/null
	fi
}



cipher=`cat $ovpndir/server.conf | grep -E "^cipher" | cut -d ' ' -f2`

if [ $1 = ca ]; then
	openssl x509 -in ./ca.pem -days 3650 -out ca_new.pem -signkey ./ca.key
	echo "New CA certificate stored in ca_new.pem"
	exit
fi

if [ $1 = serv ]; then
	openssl genrsa -out ${prefix}-$1.key
	echo -e "RU\nUral\nChel\n$org\nIT\n$srvname\n\n\n" |openssl req -config $sslconf -new -nodes -key ${prefix}-$1.key -out ${prefix}-$1.csr -sha256
	openssl ca -batch -in ${prefix}-$1.csr -out ${prefix}-$1.crt -config $sslconf
	exit
fi


userdir=$ovpndir/clients/$prefix-$1
keyfile=$userdir/${prefix}_$1.key
certfile=$userdir/${prefix}_$1.crt
csrfile=$userdir/${prefix}_$1.csr
CONF=$userdir/${prefix}_$1.ovpn
ccd=$userdir/ccd

mkdir -p $userdir

if [ -s $keyfile ]; then
	echo "keyfile already exists"
else
	echo "generatating keyfile"
	openssl genrsa -out $keyfile
fi

if [ -s $certfile ]; then
	echo "cert file already exists"
else
	if [ -s $certfile ]; then
		echo "cert request file already exists"
	else
		echo "generating cert request"
		echo -e "RU\nUral\nChel\n$org\nIT\n$1\n\n\n" |openssl req -config $sslconf -new -nodes -key $keyfile -out $csrfile
	fi
	echo "generating cert file"
	openssl ca -batch -in $csrfile -out $certfile  -config $sslconf
fi

if [ -s $ccd ]; then
	echo "CCD file already exists"
else
	if [ -n "$inventoryApiUrl" ]; then
		echo "Fetching reserved IP for ovpn-$1"
		
		addr=`inventoryGetPinnedIp ovpn-$1`
		if [ "$addr" == "null" ]; then
			echo "ERR fetching reserved addr."
			echo "Fetching first unused IP in $vpnnet"
			addr=`inventoryGetUnusedIp $vpnnet`
			if [ "$addr" == "null" ]; then
				echo "HALT: ERR fetching unused IP!"
				exit 10
			fi
		else
			#сохраненный адрес получаем без подсети, поэтому дописываем суффикс от сети(предполагаем что адрес из нее) и конвертируем в маску
			mask=`networkSuffix $vpnnet`
			addr=`suffix2mask $addr/$mask`
		fi
		echo "got $addr"
		echo "ifconfig-push $addr" > $ccd
	else
		echo "Creating empty CCD"
		touch $ccd
	fi

	octetRoute=`suffix2mask $vpnnet`
	echo "push \"route $octetRoute\"" >> $ccd
	for netw in $subnets; do
		octetRoute=`suffix2mask $netw`
		echo "push \"route $octetRoute\"" >> $ccd
	done
fi


if [ -s $CONF ]; then
	echo "conf file already exists"
else
>$CONF
	echo "client">>$CONF
	echo "dev		tun"		>>$CONF
	echo "port		$port"		>>$CONF
	echo "proto		$proto"		>>$CONF
	echo "remote	$srvaddr"	>>$CONF
	echo "<ca>"					>>$CONF
	cat		$ovpndir/ca.pem		>>$CONF
	echo "</ca>"				>>$CONF
	echo "<cert>"				>>$CONF
	cat		$certfile			>>$CONF
	echo "</cert>"				>>$CONF
	echo "<key>"				>>$CONF
	cat		$keyfile			>>$CONF
	echo "</key>"				>>$CONF
	echo "<tls-auth>"			>>$CONF
	cat		$ovpndir/ta.key		>>$CONF
	echo "</tls-auth>"			>>$CONF
	echo "tls-client"			>>$CONF
	echo "cipher $cipher"		>>$CONF
	echo "data-ciphers $cipher"	>>$CONF
	echo "resolv-retry infinite">>$CONF
	echo "persist-key"			>>$CONF
	echo "persist-tun"			>>$CONF
	#echo "ping 10"				>>$CONF
	#echo "mssfix 1400"			>>$CONF
	#echo "comp-lzo"				>>$CONF
	cp $CONF $userdir/${prefix}_$1.conf
fi



# fetching IP
if [ -n "$inventoryApiUrl" ]; then
	ip=`grep -vE '^#' $ccd | grep 'ifconfig-push' | head -n 1 | cut -d' ' -f2`
	if [ -n "$ip" ]; then
		curl -s -d "text_addr=$ip&name=ovpn-$1" -X POST $inventoryApiUrl/net-ips/create >>/dev/null
		curl -s -d "text_addr=$ip&name=ovpn-$1" -X PUT  $inventoryApiUrl/net-ips/upate >>/dev/null
		attachUserIp $1 $ip
	fi
fi

header="#!/bin/bash"

echo -e "$header\n$ovpndir/usr.enable $1 \$*" > $userdir/_enable
chmod 755 $userdir/_enable

echo -e "$header\n$ovpndir/usr.disable $1 \$*" > $userdir/_disable
chmod 755 $userdir/_disable

echo -e "$header\n$ovpndir/usr.new $1 \$*" > $userdir/_renew
chmod 755 $userdir/_renew

