#!/bin/bash

if [ -z "$1" ]; then
    echo "No username given"
    exit
fi
. ./_config



#прописать ползователю $1 ip адресс $2
function attachUserIp() {
	invUser=`curl -k -s $inventoryApiUrl/users/view?login=$1`
	userid=`echo $invUser|jq -r .id`
	ips=`echo $invUser|jq -r .ips`
	user=`echo $invUser|jq -r .Login`

	if [ "$1" != "$user" ]; then
		echo "Пользователь $1 не найден"
		return 0
	fi

	#echo $invUser

	if echo "$ips" | grep -q "$2"; then
		echo "IP адрес $2 уже закреплен за $1"
		return 0
	else

		if [ "$ips" == "null" ] ; then
			ips=$2
		else
			ips="$ips
$2"
		fi
		curl -s -d "ips=$ips" -X PUT $inventoryApiUrl/users/$userid >>/dev/null
	fi
}



cipher=`cat server.conf | grep -E "^cipher" | cut -d ' ' -f2`

if [ $1 = ca ]; then
	openssl x509 -in ./ca.pem -days 3650 -out ca_new.pem -signkey ./ca.key
	echo "New CA certificate stored in ca_new.pem"
	exit
fi

if [ $1 = serv ]; then
	openssl genrsa -out ${prefix}-$1.key
	echo -e "RU\nUral\nChel\n$org\nIT\n$srvname\n\n\n" |openssl req -config $sslconf -new -nodes -key ${prefix}-$1.key -out ${prefix}-$1.csr -sha256
	openssl ca -batch -in ${prefix}-$1.csr -out ${prefix}-$1.crt -config $sslconf
	exit
fi


userdir=clients/$prefix-$1
keyfile=$userdir/${prefix}_$1.key
certfile=$userdir/${prefix}_$1.crt
csrfile=$userdir/${prefix}_$1.csr
CONF=$userdir/${prefix}_$1.ovpn
ccdln=ccd/$1
ccd=$userdir/ccd

mkdir -p $userdir

if [ -s $keyfile ]; then
	echo "keyfile already exists"
else
	echo "generatating keyfile"
	openssl genrsa -out $keyfile
fi

if [ -s $certfile ]; then
	echo "cert file already exists"
else
	if [ -s $certfile ]; then
		echo "cert request file already exists"
	else
		echo "generating cert request"
		echo -e "RU\nUral\nChel\n$org\nIT\n$1\n\n\n" |openssl req -config $sslconf -new -nodes -key $keyfile -out $csrfile
	fi
	echo "generating cert file"
	openssl ca -batch -in $csrfile -out $certfile  -config $sslconf
fi

if [ -s $ccd ]; then
	echo "CCD file already exists"
else
	if [ -n "$inventoryUrl" ]; then
		echo "Fetching first unused IP in $vpnnet"
		invData=`curl -k -s $inventoryApiUrl/net-ips/first-unused?text_addr=$vpnnet`
		addr=`echo $invData | jq -r .text_addr`
		echo "got $addr"
		echo "ifconfig-push $addr 255.255.255.0" > $ccd
	else
		echo "Creating empty CCD"
		touch $ccd
	fi
		echo "push \"route $vpnnet 255.255.255.0\"" >> $ccd
		for netw in $subnets; do
			echo "push \"route $netw 255.255.255.0\"" >> $ccd
		done
fi

if [ -f $ccdln ]; then
	echo "CCD link already exists"
else
	echo "Linking CCD to user dir"
	ln -s `pwd`/$ccd $ccdln
fi


>$CONF
echo "client">>$CONF
echo "dev		tun"		>>$CONF
echo "port		$port"		>>$CONF
echo "proto		$proto"		>>$CONF
echo "remote	$srvaddr"	>>$CONF
echo "<ca>"					>>$CONF
cat		ca.pem				>>$CONF
echo "</ca>"				>>$CONF
echo "<cert>"				>>$CONF
cat		$certfile			>>$CONF
echo "</cert>"				>>$CONF
echo "<key>"				>>$CONF
cat		$keyfile			>>$CONF
echo "</key>"				>>$CONF
echo "<tls-auth>"			>>$CONF
cat		ta.key				>>$CONF
echo "</tls-auth>"			>>$CONF
echo "tls-client"			>>$CONF
echo "cipher $cipher"		>>$CONF
echo "data-ciphers $cipher"	>>$CONF
echo "resolv-retry infinite">>$CONF
echo "persist-key"			>>$CONF
echo "persist-tun"			>>$CONF
#echo "ping 10"				>>$CONF
#echo "mssfix 1400"			>>$CONF
#echo "comp-lzo"				>>$CONF
cp $CONF $userdir/${prefix}_$1.conf



# fetching IP
if [ -n "$inventoryApiUrl" ]; then
	ip=`grep -vE '^#' $ccd | grep 'ifconfig-push' | head -n 1 | cut -d' ' -f2`
	if [ -n "$ip" ]; then
		curl -s -d "text_addr=$ip&name=ovpn-$1" -X POST $inventoryApiUrl/net-ips/create >>/dev/null
		curl -s -d "text_addr=$ip&name=ovpn-$1" -X PUT  $inventoryApiUrl/net-ips/upate >>/dev/null
		attachUserIp $1 $ip
	fi
fi
